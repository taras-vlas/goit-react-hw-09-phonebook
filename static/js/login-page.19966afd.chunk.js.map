{"version":3,"sources":["page/LoginPage.jsx"],"names":["useStyles","createUseStyles","login","display","flexDirection","justifyContent","alignItems","marginTop","form","padding","width","borderRadius","border","marginBottom","label","fontSize","color","cursor","button","height","backgroundColor","outline","boxShadow","font","textTransform","userSelect","transition","LoginPage","classes","dispatch","useDispatch","useState","email","setEmail","password","setPassword","isLoading","useSelector","state","user","className","type","timeout","onSubmit","e","preventDefault","payload","value","onChange","target","variant"],"mappings":"mOAOMA,EAAYC,YAAgB,CAChCC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,QAEbC,KAAM,CACJL,QAAS,OACTC,cAAe,SACfK,QAAS,OACTC,MAAO,QACPC,aAAc,MACdC,OAAQ,oBACRC,aAAc,QAEhBC,MAAO,CACLX,QAAS,eACTU,aAAc,OACdH,MAAO,QACPK,SAAU,OACVC,MAAO,UACPC,OAAQ,UAERZ,eAAgB,iBAGlBa,OAAQ,CACNC,OAAQ,OACRhB,QAAS,cACTG,WAAY,SACZD,eAAgB,SAChBW,MAAO,OACPI,gBAAiB,UACjBR,OAAQ,IACRS,QAAS,IACTX,MAAO,QACPD,QAAS,UACTE,aAAc,MACdM,OAAQ,UACRK,UAAW,sCACXC,KAAM,UACNC,cAAe,OACfC,WAAY,OACZC,WAAY,qCACV,UAAW,CACXJ,UAAW,sCACXF,gBAAiB,4BA6DRO,UAxDG,WAChB,IAAMC,EAAU5B,IACV6B,EAAWC,cACjB,EAA0BC,mBAAS,mBAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,YAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,aAapD,OACE,qBAAKI,UAAWZ,EAAQ1B,MAAxB,SACGkC,EACI,cAAC,IAAD,CAASK,KAAK,WAAWzB,MAAM,UAAUG,OAAQ,GAAIT,MAAO,GAAI8B,UAAU,UAAUE,QAAS,MAG5F,uBAAMF,UAAWZ,EAAQpB,KAAMmC,SAbpB,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CAAEd,QAAOE,YACzBL,EAAS3B,YAAM4C,KASP,UAEE,wBAAON,UAAWZ,EAAQd,MAA1B,UACE,2CACA,uBAAO2B,KAAK,QAAQM,MAAOf,EAAOgB,SArBtB,SAACJ,GAAD,OAAOX,EAASW,EAAEK,OAAOF,aAwBvC,wBAAOP,UAAWZ,EAAQd,MAA1B,UACE,8CACA,uBACE2B,KAAK,WACLM,MAAOb,EACPc,SA3Ba,SAACJ,GAAD,OAAOT,EAAYS,EAAEK,OAAOF,aA+B7C,cAAC,IAAD,CACEN,KAAK,SACLD,UAAWZ,EAAQV,OACnBgC,QAAQ,YACRlC,MAAM,UAJR","file":"static/js/login-page.19966afd.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../redux/user/user-operations\";\nimport Button from \"@material-ui/core/Button\";\nimport Spinner from 'react-loader-spinner';\n\nconst useStyles = createUseStyles({\n  login: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"20px\",    \n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"20px\",\n    width: \"400px\",\n    borderRadius: \"2px\",\n    border: \"1px solid #464545\",\n    marginBottom: \"20px\",\n  },\n  label: {\n    display: \"inline-block\",\n    marginBottom: \"16px\",\n    width: \"360px\",\n    fontSize: \"16px\",\n    color: \"#171718\",\n    cursor: \"pointer\",\n    // display: \"flex\",\n    justifyContent: \"space-between\",  \n  },\n\n  button: {\n    height: \"25px\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#000\",\n    backgroundColor: \"#c0d4f5\",\n    border: \"0\",\n    outline: \"0\",\n    width: \"120px\",\n    padding: \"2px 8px\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.05)\",\n    font: \"inherit\",\n    textTransform: \"none\",\n    userSelect: \"none\",\n    transition: \"background-color 200ms ease-in-out\",\n      '&:hover': { \n      boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.15)\",\n      backgroundColor: \"rgba(0, 0, 255, 0.87)\",\n    },\n  },    \n});\n\nconst LoginPage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"tutgoit@ukr.net\");\n  const [password, setPassword] = useState(\"password\");\n  \n  const isLoading = useSelector((state) => state.user.isLoading);\n\n  const handleChangeEmail = (e) => setEmail(e.target.value);\n\n  const handleChangePassword = (e) => setPassword(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const payload = { email, password };\n    dispatch(login(payload));\n  };\n\n  return (\n    <div className={classes.login}>\n      {isLoading\n        ? (<Spinner type=\"TailSpin\" color=\"#00BFFF\" height={40} width={40} className=\"Spinner\" timeout={3000} />         //<span>Loading ...</span>\n          )\n        : (\n            <form className={classes.form} onSubmit={handleSubmit}>\n              \n              <label className={classes.label}>\n                <span>email: </span>\n                <input type=\"email\" value={email} onChange={handleChangeEmail} />\n              </label>\n            \n              <label className={classes.label}>              \n                <span>password: </span>\n                <input\n                  type=\"password\"\n                  value={password}\n                  onChange={handleChangePassword}\n                />\n              </label>\n            \n              <Button\n                type=\"submit\"\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Login\n              </Button>\n            \n            </form>\n      )}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}