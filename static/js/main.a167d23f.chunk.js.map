{"version":3,"sources":["routes.js","components/UserMenu/UserMenuStyles.jsx","components/UserMenu/UserMenu.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/ChoiceMenu/index.jsx","App.jsx","redux/rootReducer.js","redux/store.js","index.js","redux/user/user-actions.js","redux/user/user-operations.js"],"names":["Routes","path","label","component","lazy","exact","isProtected","isNotLoggedOn","useStyles","createUseStyles","menu","container","display","justifyContent","padding","marginTop","boxShadow","button","alignItems","color","backgroundColor","border","outline","width","borderRadius","cursor","font","textTransform","userSelect","transition","active","UserMenu","classes","dispatch","useDispatch","isLoggedOn","useSelector","state","user","React","useState","anchorEl","setAnchorEl","handleClose","className","Button","aria-controls","aria-haspopup","onClick","e","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","map","checkShowPage","MenuItem","activeClassName","to","logout","variant","PrivateRoute","props","PublicRoute","Content","fallback","type","height","timeout","Component","App","isСheckIn","useEffect","getCurrentUser","tokenPersistConfig","key","storage","userReducer","persistReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","rootReducer","devTools","process","persistor","persistStore","ReactDOM","render","template","AlertTemplate","loading","document","getElementById","createSlice","name","initialState","email","token","isLoading","error","reducers","fetchRegisterRequest","fetchRegisterSuccess","action","payload","fetchRegisterError","message","fetchLoginRequest","fetchLoginSuccess","fetchLoginError","fetchLogoutRequest","fetchLogoutSuccess","fetchLogoutError","fetchUserRequest","fetchUserSuccess","fetchUserError","fetchUserCancel","actions","axios","defaults","baseURL","setToken","headers","common","register","post","then","data","catch","toast","login","getState","get"],"mappings":"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","file":"static/js/main.a167d23f.chunk.js","sourcesContent":["import { lazy } from \"react\";\n\nconst ContactsPage = lazy(() =>\n  import(\"./page/ContactsPage\" /* webpackChunkName: \"contacts-page\" */)\n);\n\nconst LoginPage = lazy(() =>\n  import(\"./page/LoginPage\" /* webpackChunkName: \"login-page\" */)\n);\nconst RegisterPage = lazy(() =>\n  import(\"./page/RegisterPage\" /* webpackChunkName: \"register-page\" */)\n);\n\nconst Routes = [            //Тут для маршрута встановлюються атрибути:\n   {\n    path: \"/contacts\",\n    label: \"Contacts Page\",\n    component: ContactsPage,\n    exact: true,\n    isProtected: true,\n  },\n  \n  {\n    path: \"/login\",          //Спрацьовує (маршурт)путь \"/login\"  та обробляється Компонентою  LoginPage\n    label: \"Login\",\n    component: LoginPage,\n    isProtected: false,\n    isNotLoggedOn: true,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    component: RegisterPage,\n    isProtected: false,\n    isNotLoggedOn: true,\n  },\n];\n\n\nexport default Routes;\n\n\n\n\n\n\n\n\n\n\n// const Routes = {\n//   \"/login\": () => <LoginPage />,\n//   \"/register\": () => <RegisterPage />,\n// };\n\n\n// export const routes = {\n//   MAIN: '/',\n//   REGISTRATION: '/register',\n//   LOGIN: '/login',\n//   //PHONEBOOK: '/phonebook/',\n// };\n\n// export default routes;","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  menu: { },\r\n\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"10px\",\r\n    marginTop: \"0px\",\r\n    boxShadow: \"0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)\",\r\n  \r\n  },\r\n  button: {\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#000\",\r\n    backgroundColor: \"#c0d4f5\",\r\n    border: \"0\",\r\n    outline: \"0\",\r\n    width: \"120px\",\r\n    padding: \"2px 8px\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.05)\",\r\n    font: \"inherit\",\r\n    textTransform: \"none\",\r\n    userSelect: \"none\",\r\n    transition: \"background-color 200ms ease-in-out\",\r\n      '&:hover': { \r\n      boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.15)\",\r\n      backgroundColor: \"rgba(0, 0, 255, 0.87)\",\r\n      },\r\n  },\r\n\r\n  active: {\r\n    color: \"rgb(59, 138, 255)\",\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Form: {\r\n//   display: \"flex\",\r\n//   flexDirection: \"column\",\r\n//   padding: \"20px\",\r\n//   width: \"400px\",\r\n//   borderRadius: \"2px\",\r\n//   border: \"1px solid #464545\",\r\n//   marginBottom: \"20px\",\r\n// },\r\n\r\n// Label: {\r\n//   display: \"inline-block\",\r\n//   marginBottom: \"16px\",\r\n//   width: \"200px\",\r\n//   fontSize: \"20px\",\r\n//   color: \"#171718\",\r\n//   cursor: \"pointer\",\r\n// },\r\n\r\n// Input: {\r\n//   color: \"#171718\",\r\n//   font: \"inherit\",\r\n//   fontSize: \"0.9rem\",\r\n//   padding: \"2px\",\r\n//   borderRadius: \"4px\",\r\n//   border: \"1px solid #9e9d9d\",\r\n//   width: \"200px\",\r\n//   outline: \"0\",\r\n//       '&:focus': {  \r\n//       border: \"2px solid blue\",\r\n//       boxShadow: \"1px 1px 3px 1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(41, 107, 250, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)\",\r\n//       },\r\n// },\r\n\r\n\r\n\r\n// Button: {\r\n//   display: \"inline-flex\",\r\n//   alignItems: \"center\",\r\n//   justifyContent: \"center\",\r\n//   color: \"#000\",\r\n//   backgroundColor: \"#c0d4f5\",\r\n//   border: \"0\",\r\n//   outline: \"0\",\r\n//   width: \"120px\",\r\n//   padding: \"2px 8px\",\r\n//   borderRadius: \"4px\",\r\n//   cursor: \"pointer\",\r\n//   boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.05)\",\r\n//   font: \"inherit\",\r\n//   textTransform: \"none\",\r\n//   userSelect: \"none\",\r\n//   transition: \"background-color 200ms ease-in-out\",\r\n//       '&:hover': { \r\n//       boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.15)\",\r\n//       backgroundColor: \"rgba(0, 0, 255, 0.87)\",\r\n//       },\r\n// },\r\n\r\n\r\n// List: {\r\n//   width: \"500px\",\r\n// },\r\n\r\n//  List_item: {\r\n//   display: \"flex\",\r\n//   alignItems: \"center\",\r\n//   padding: \"0px\",\r\n//   marginTop: \"8px\",\r\n//   boxShadow: \"0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)\",\r\n// },\r\n\r\n// List_button: {\r\n//   alignItems: \"flex-end\",\r\n//   marginRight: \"4px\",\r\n//   marginLeft: \"4px\",\r\n//   display: \"inline-flex\",\r\n//   alignItems: \"center\",\r\n//   justifyContent: \"center\",\r\n//   color: \"#000\",\r\n//   backgroundColor: \"#c0d4f5\",\r\n//   border: \"1px\",\r\n//   outline: \"0\",\r\n//   padding: \"2px 8px\",\r\n//   borderRadius: \"4px\",\r\n//   cursor: \"pointer\",\r\n//   boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.05)\",\r\n//   font: \"inherit\",\r\n//   textTransform: \"none\",\r\n//   userSelect: \"none\",\r\n//   transition: \"background-color 200ms ease-in-out\",\r\n//     '&:focus': {\r\n//       boxShadow: \"0px 2px 1px 1px rgba(0, 0, 0, 0.15)\",\r\n//       backgroundColor: \"orange;\",\r\n//     },\r\n//   },\r\n\r\n});\r\n\r\nexport default useStyles;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport  Routes  from \"../../routes\";\nimport { NavLink } from \"react-router-dom\";\n// import { A } from \"hookrouter\";\nimport Button from \"@material-ui/core/Button\";\nimport { logout } from \"../../redux/user/user-operations\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useStyles from \"./UserMenuStyles\";\n\nconst checkShowPage = (isProtected, isLoggedOn, isNotLoggedOn) => {\n  const showProtected = !isProtected || (isProtected && isLoggedOn);\n  const showLoggedOn = !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn);\n\n  return showProtected && showLoggedOn;\n};\n\nconst UserMenu = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogOut = () => dispatch(logout());\n  return (\n    <div    className={classes.container}>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        Open Menu\n      </Button>\n            \n      <Menu\n        className={classes.menu}\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}        \n      >\n        {Routes.map(({ path, exact, label, isProtected, isNotLoggedOn }) => {\n          const showInMenu = checkShowPage(\n            isProtected,\n            isLoggedOn,\n            isNotLoggedOn\n          );\n\n          return (showInMenu\n            ? (\n              // <A href={path} key={path} className={classes.link}>\n              //   {label}\n              // </A>\n              <MenuItem onClick={handleClose}>\n                <NavLink\n                  activeClassName={classes.active}\n                  key={path}\n                  exact={exact}\n                  to={path}\n                >\n                  {label}\n                </NavLink>\n              </MenuItem>\n            )\n            : null\n          );\n        })}\n      </Menu>\n      \n      <Button\n        className={classes.button}\n        onClick={handleLogOut}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = (props) => {\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\n\n  return isLoggedOn\n    ? <Route {...props} />\n    : <Redirect to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","import { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nconst PublicRoute = (props) => {\n  const isLoggedOn = useSelector((state) => state.user.isLoggedOn);\n  const { isNotLoggedOn } = props;\n\n  return !isNotLoggedOn || (isNotLoggedOn && !isLoggedOn)\n    ? ( \n      <Route {...props} />\n      ) \n    : null;\n};\n\nexport default PublicRoute;\n","import { Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport PublicRoute from \"../PublicRoute\";\nimport  Routes  from \"../../routes\";\nimport Spinner from 'react-loader-spinner';\n\nconst Content = () => {\n  return (\n    <div className=\"content\">\n      <Suspense fallback={\n        <Spinner type=\"TailSpin\" color=\"#00BFFF\" height={40} width={40} className=\"Spinner\" timeout={3000} />         //<span>Loading ...</span>\n      }>\n        \n        <Switch>\n          {Routes.map(\n            ({\n              path,\n              exact,\n              isProtected,\n              component: Component,\n              isNotLoggedOn,\n            }) =>\n              isProtected ? ( <PrivateRoute\n                                key={path}\n                                path={path}\n                                exact={exact}\n                                component={Component}\n                              />\n                            )\n                          : (\n                              <PublicRoute\n                                key={path}\n                                path={path}\n                                exact={exact}\n                                component={Component}\n                                isNotLoggedOn={isNotLoggedOn}\n                              />\n                            )\n          )}\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Content;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\n// import { useRoutes } from \"hookrouter\";\n// import Routes from \"./routes\";\nimport UserMenu from \"./components/UserMenu/UserMenu\";\nimport Content from \"./components/ChoiceMenu\";\nimport { getCurrentUser } from \"./redux/user/user-operations\";\nimport Spinner from 'react-loader-spinner';\n\n\nconst App = () => {\n  // const routeResult = useRoutes(Routes);\n  const dispatch = useDispatch();\n  const isСheckIn = useSelector((state) => state.user.isСheckIn);\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isСheckIn\n        ? (\n           <Spinner type=\"TailSpin\" color=\"#00BFFF\" height={40} width={40} className=\"Spinner\" timeout={3000} />         //<span>Loading ...</span>\n          )\n        : (\n          <div className=\"body\">\n            <UserMenu />\n            <Content />\n            {/* {routeResult}  */}\n            <ToastContainer />\n          </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";  \nimport user from \"./user/user-actions\";\n\nconst tokenPersistConfig = {\n  key: \"token\",\n  storage,\n};\n\nconst userReducer = persistReducer(tokenPersistConfig, user);\n\nexport default combineReducers({\n  user: userReducer,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport rootReducer from \"./rootReducer\";\nimport logger from \"redux-logger\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n import { Provider as AlertProvider } from \"react-alert\";\n import AlertTemplate from \"react-alert-template-basic\";\nimport './styles.css';\nimport App from './App';\n  import { BrowserRouter as Router } from \"react-router-dom\";\n  import { PersistGate } from \"redux-persist/integration/react\";\n  import { store, persistor } from \"./redux/store\";\n\n\n            // const options = {\n            //   // you can also just use 'bottom center'\n            //       //position: positions.BOTTOM_CENTER,\n            //   timeout: 5000,\n            //   offset: \"30px\",\n            //   // you can also just use 'scale'\n            //       //transition: transitions.SCALE,\n            // };\n\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate}   >\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router>\n            <App />\n          </Router>\n        </PersistGate>\n    </Provider>\n  </AlertProvider>\n  , document.getElementById('root')\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  email: \"\",\n  name: \"\",\n  token: \"\",\n  isLoggedOn: false,\n  isLoading: true,\n  isСheckIn: true,\n  error: \"\",\n};\n\nconst { actions, reducer } = createSlice({\n  name: \"user\",\n  initialState,   \n  reducers: {\n    fetchRegisterRequest: (state) => {\n      state.isLoading = true;\n    },\n    fetchRegisterSuccess: (state, action) => {\n      state.name = action.payload.user.name;\n      state.email = action.payload.user.email;\n      state.token = action.payload.token;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n    fetchRegisterError: (state, action) => {\n      state.error = action.payload.message;\n      state.isLoading = false;\n    },\n    fetchLoginRequest: (state) => {\n      state.isLoading = true;\n    },\n    fetchLoginSuccess: (state, action) => {\n      state.name = action.payload.user.name;\n      state.email = action.payload.user.email;\n      state.token = action.payload.token;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n    fetchLoginError: (state, action) => {\n      state.error = action.payload.message;\n      state.isLoading = false;\n    },\n    fetchLogoutRequest: (state) => {\n      state.isLoading = true;\n    },\n    fetchLogoutSuccess: (state, action) => {\n      state.token = \"\";\n      state.name = \"\";\n      state.email = \"\";\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n    fetchLogoutError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    fetchUserRequest: (state) => {\n      state.isСheckIn = true;\n    },\n    fetchUserSuccess: (state, action) => {\n      state.name = action.payload.name;\n      state.email = action.payload.email;\n      state.isLoggedOn = true;\n      state.isСheckIn = false;\n    },\n    fetchUserError: (state) => {\n      state.isСheckIn = false;\n      state.isLoggedOn = false;\n      state.token = \"\";\n    },\n    fetchUserCancel: (state) => {\n      state.isСheckIn = false;\n    },\n  },\n});\n\nexport const {\n  fetchRegisterRequest,\n  fetchRegisterSuccess,\n  fetchRegisterError,\n  \n  fetchLoginRequest,\n  fetchLoginSuccess,\n  fetchLoginError,\n  \n  fetchLogoutRequest,\n  fetchLogoutSuccess,\n  fetchLogoutError,\n  \n  fetchUserRequest,\n  fetchUserSuccess,\n  fetchUserError,\n  fetchUserCancel,\n} = actions;\n\nexport default reducer;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport * as actions from \"./user-actions\";\n\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/users\";\n\nconst setToken = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = token;\n};\n\nexport const register = (payload) => (dispatch) => {\n  dispatch(actions.fetchRegisterRequest());\n\n  axios\n    .post(\"/signup\", payload)\n    .then(({ data }) => {\n      setToken(data.token);\n      dispatch(actions.fetchRegisterSuccess(data));\n    })\n    .catch((error) => {\n      toast.error(error.message);\n      dispatch(actions.fetchRegisterError(error.message));\n    });\n};\n\nexport const login = (payload) => (dispatch) => {\n  dispatch(actions.fetchLoginRequest());\n\n  axios\n    .post(\"/login\", payload)\n    .then(({ data }) => {\n      setToken(data.token);\n      dispatch(actions.fetchLoginSuccess(data));\n    })\n    .catch((error) => {\n      toast.error(error.message);\n      dispatch(actions.fetchLoginError(error.message));\n    });\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch(actions.fetchLogoutRequest());\n\n  axios\n    .post(\"/logout\")\n    .then(() => dispatch(actions.fetchLogoutSuccess()))\n    .catch((error) => {\n      toast.error(error.message);\n      dispatch(actions.fetchLogoutError(error.message));\n    });\n};\n\nexport const getCurrentUser = () => (dispatch, getState) => {\n  const state = getState();\n  const { token } = state.user;\n\n  if (!token) {\n    dispatch(actions.fetchUserCancel());\n    return;\n  }\n\n  dispatch(actions.fetchUserRequest());\n  setToken(token);\n\n  axios\n    .get(\"/current\")\n    .then(({ data }) => dispatch(actions.fetchUserSuccess(data)))\n    .catch((error) => {\n      toast.error(error.message);\n      setToken(\"\");\n      dispatch(actions.fetchUserError(error.message));\n    });\n};\n\n// export default {\n//   register,\n//   login,\n//   logout,\n//   getCurrentUser\n// };"],"sourceRoot":""}