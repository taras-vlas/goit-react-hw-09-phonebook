{"version":3,"sources":["components/Title/Title.module.scss","components/HookForm/HookForm.module.scss","components/Title/Title.jsx","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/RegistrationForm/RegistrationForm.jsx","views/RegistrationPage/RegistrationPage.jsx"],"names":["module","exports","Title","children","itemRef","createRef","CSSTransition","in","appear","timeout","classNames","styles","nodeRef","className","container","title","ref","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","current","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","_extends","Component","propTypes","initialState","name","email","password","RegistrationForm","useState","state","setState","isLoading","useSelector","authSelectors","getLoading","dispatch","useDispatch","onRegister","useCallback","authOperations","register","handleChange","event","target","value","prev","resetForm","form","onSubmit","preventDefault","HeaderWrapper","TextField","label","onChange","pattern","disabled","required","aria-label","placeholder","button","RegistrationPage","useEffect","document","Loader"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,OAAS,sBAAsB,aAAe,8B,oBCAlID,EAAOC,QAAU,CAAC,QAAU,0BAA0B,cAAgB,gCAAgC,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,uBAAuB,MAAQ,wBAAwB,UAAY,4BAA4B,OAAS,2B,gHCM7QC,EAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGTC,EAAUC,oBAAU,MAE1B,OACE,cAACC,EAAA,EAAD,CACEC,IAAI,EACJC,QAAQ,EACRC,QAAS,IACTC,WAAYC,IACZC,QAASR,EALX,SAOE,qBAAKS,UAAWF,IAAOG,UAAvB,SACE,oBAAID,UAAWF,IAAOI,MAAOC,IAAKZ,EAAlC,SACGD,SAOXD,EAAMe,aAAe,CACnBd,SAAU,IAOGD,S,gECrCf,SAASgB,EAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,I,6BCelIE,EAAc,SAAqBC,EAAMC,GAC3C,OAAOD,GAAQC,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,ODPyCf,ECObe,QDPIC,ECOVL,GDNZM,UACVD,EAAQC,UAAUC,OAAOlB,GACa,kBAAtBgB,EAAQhB,UACxBgB,EAAQhB,UAAYK,EAAiBW,EAAQhB,UAAWA,GAExDgB,EAAQG,aAAa,QAASd,EAAiBW,EAAQhB,WAAagB,EAAQhB,UAAUoB,SAAW,GAAIpB,KAN1F,IAAqBgB,EAAShB,MCiFzCP,EAA6B,SAAU4B,GAGzC,SAAS5B,IAGP,IAFA,IAAI6B,EAEKC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAgHzB,OA7GAN,EAAQD,EAAiBQ,KAAKC,MAAMT,EAAkB,CAACU,MAAMC,OAAON,KAAUK,MACxEE,eAAiB,CACrBtC,OAAQ,GACRuC,MAAO,GACPC,KAAM,IAGRb,EAAMc,QAAU,SAAUC,EAAWC,GACnC,IAAIC,EAAwBjB,EAAMkB,iBAAiBH,EAAWC,GAC1D3B,EAAO4B,EAAsB,GAC7BE,EAAYF,EAAsB,GAEtCjB,EAAMoB,cAAc/B,EAAM,QAE1BW,EAAMqB,SAAShC,EAAM8B,EAAY,SAAW,QAAS,QAEjDnB,EAAMsB,MAAMR,SACdd,EAAMsB,MAAMR,QAAQC,EAAWC,IAInChB,EAAMuB,WAAa,SAAUR,EAAWC,GACtC,IAAIQ,EAAyBxB,EAAMkB,iBAAiBH,EAAWC,GAC3D3B,EAAOmC,EAAuB,GAG9BC,EAFYD,EAAuB,GAEhB,SAAW,QAElCxB,EAAMqB,SAAShC,EAAMoC,EAAM,UAEvBzB,EAAMsB,MAAMC,YACdvB,EAAMsB,MAAMC,WAAWR,EAAWC,IAItChB,EAAM0B,UAAY,SAAUX,EAAWC,GACrC,IAAIW,EAAyB3B,EAAMkB,iBAAiBH,EAAWC,GAC3D3B,EAAOsC,EAAuB,GAG9BF,EAFYE,EAAuB,GAEhB,SAAW,QAElC3B,EAAMoB,cAAc/B,EAAMoC,GAE1BzB,EAAMqB,SAAShC,EAAMoC,EAAM,QAEvBzB,EAAMsB,MAAMI,WACd1B,EAAMsB,MAAMI,UAAUX,EAAWC,IAIrChB,EAAM4B,OAAS,SAAUb,GACvB,IACI1B,EADyBW,EAAMkB,iBAAiBH,GAClB,GAElCf,EAAMoB,cAAc/B,EAAM,UAE1BW,EAAMoB,cAAc/B,EAAM,SAE1BW,EAAMqB,SAAShC,EAAM,OAAQ,QAEzBW,EAAMsB,MAAMM,QACd5B,EAAMsB,MAAMM,OAAOb,IAIvBf,EAAM6B,UAAY,SAAUd,GAC1B,IACI1B,EADyBW,EAAMkB,iBAAiBH,GAClB,GAElCf,EAAMqB,SAAShC,EAAM,OAAQ,UAEzBW,EAAMsB,MAAMO,WACd7B,EAAMsB,MAAMO,UAAUd,IAI1Bf,EAAM8B,SAAW,SAAUf,GACzB,IACI1B,EADyBW,EAAMkB,iBAAiBH,GAClB,GAElCf,EAAMoB,cAAc/B,EAAM,QAE1BW,EAAMqB,SAAShC,EAAM,OAAQ,QAEzBW,EAAMsB,MAAMQ,UACd9B,EAAMsB,MAAMQ,SAASf,IAIzBf,EAAMkB,iBAAmB,SAAUH,EAAWC,GAC5C,OAAOhB,EAAMsB,MAAM7C,QAAU,CAACuB,EAAMsB,MAAM7C,QAAQsD,QAAShB,GACzD,CAACA,EAAWC,IAGhBhB,EAAMgC,cAAgB,SAAUP,GAC9B,IAAIlD,EAAayB,EAAMsB,MAAM/C,WACzB0D,EAA2C,kBAAf1D,EAE5B2D,EAAgBD,EAAqB,IAD5BA,GAAsB1D,EAAaA,EAAa,IAAM,IACZkD,EAAOlD,EAAWkD,GAGzE,MAAO,CACLS,cAAeA,EACfC,gBAJoBF,EAAqBC,EAAgB,UAAY3D,EAAWkD,EAAO,UAKvFW,cAJkBH,EAAqBC,EAAgB,QAAU3D,EAAWkD,EAAO,UAQhFzB,EAtHTqC,YAAelE,EAAe4B,GAyH9B,IAAIuC,EAASnE,EAAcoE,UA6D3B,OA3DAD,EAAOjB,SAAW,SAAkBhC,EAAMoC,EAAMe,GAC9C,IAAI9D,EAAY+B,KAAKuB,cAAcP,GAAMe,EAAQ,aAG7CJ,EADsB3B,KAAKuB,cAAc,SACLI,cAE3B,WAATX,GAA+B,SAAVe,GAAoBJ,IAC3C1D,GAAa,IAAM0D,GAKP,WAAVI,GAEFnD,GAAQA,EAAKoD,UAGX/D,IACF+B,KAAKE,eAAec,GAAMe,GAAS9D,EAhOzB,SAAkBW,EAAMC,GAC/BD,GAAQC,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,OCJsCf,EDIbe,QCJIC,EDIVL,GCHTM,UAAWD,EAAQC,UAAU+C,IAAIhE,GCHhC,SAAkBgB,EAAShB,GACxC,OAAIgB,EAAQC,YAAoBjB,GAAagB,EAAQC,UAAUgD,SAASjE,IACkC,KAAlG,KAAOgB,EAAQhB,UAAUoB,SAAWJ,EAAQhB,WAAa,KAAKkE,QAAQ,IAAMlE,EAAY,KDC9BmE,CAASnD,EAAShB,KAA6C,kBAAtBgB,EAAQhB,UAAwBgB,EAAQhB,UAAYgB,EAAQhB,UAAY,IAAMA,EAAegB,EAAQG,aAAa,SAAUH,EAAQhB,WAAagB,EAAQhB,UAAUoB,SAAW,IAAM,IAAMpB,KADxR,IAAkBgB,EAAShB,KDoOpCoE,CAAUzD,EAAMX,KAIpB4D,EAAOlB,cAAgB,SAAuB/B,EAAMoC,GAClD,IAAIsB,EAAwBtC,KAAKE,eAAec,GAC5CS,EAAgBa,EAAsBC,KACtCb,EAAkBY,EAAsBE,OACxCb,EAAgBW,EAAsBG,KAC1CzC,KAAKE,eAAec,GAAQ,GAExBS,GACF9C,EAAYC,EAAM6C,GAGhBC,GACF/C,EAAYC,EAAM8C,GAGhBC,GACFhD,EAAYC,EAAM+C,IAItBE,EAAOa,OAAS,WACd,IAAIC,EAAc3C,KAAKa,MAEnBA,GADI8B,EAAY7E,WACR8E,YAA8BD,EAAa,CAAC,gBAExD,OAAoBE,IAAMC,cAAcC,IAAYC,YAAS,GAAInC,EAAO,CACtER,QAASL,KAAKK,QACdY,UAAWjB,KAAKiB,UAChBH,WAAYd,KAAKc,WACjBK,OAAQnB,KAAKmB,OACbC,UAAWpB,KAAKoB,UAChBC,SAAUrB,KAAKqB,aAIZ3D,EAvLwB,CAwL/BmF,IAAMI,WAERvF,EAAcW,aAAe,CAC3BP,WAAY,IAEdJ,EAAcwF,UAiIT,GACUxF,O,8KGjZTyF,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAiKGC,EA7JU,WAGvB,MAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACQN,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAIfK,EAAYC,YAAYC,IAAcC,YAEtCC,EAAWC,cAGXC,EAAaC,uBACjB,SAAAT,GACEM,EAASI,IAAeC,SAASX,MAEnC,CAACM,IAKGM,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MAEdd,GAAS,SAAAe,GAAI,kCACRA,GADQ,kBAEVrB,EAAOoB,QAYNE,EAAY,WAChBhB,EAASP,IAGX,OACE,uBAAMlF,UAAWF,IAAO4G,KAAMC,SAbX,SAAAN,GACnBA,EAAMO,iBAENZ,EAAWR,GAEXiB,KAQA,UAiBI,qBAAMzG,UAAWF,IAAO+G,cAAxB,SAEE,cAACC,EAAA,EAAD,CACEC,MAAQ,YACRC,SAAUZ,EACVG,MAAOpB,EAEPpC,KAAK,OACLoC,KAAK,OAEL8B,QAAQ,yHACR/G,MAAM,kcACJgH,SAAUxB,EACZyB,UAAQ,MAkBb,qBAAMnH,UAAWF,IAAO+G,cAAxB,SAEG,cAACC,EAAA,EAAD,CACEC,MAAQ,QACRC,SAAUZ,EACVG,MAAOnB,EAEPrC,KAAK,QACLoC,KAAK,QACLiC,aAAW,uBAITF,SAAUxB,EACZyB,UAAQ,MAkBd,qBAAMnH,UAAWF,IAAO+G,cAAxB,SAEI,cAACC,EAAA,EAAD,CACEC,MAAQ,WACRC,SAAUZ,EACVG,MAAOlB,EAEPtC,KAAK,WACLoC,KAAK,WACLiC,aAAW,0BACXC,YAAY,kCAEVH,SAAUxB,EACZyB,UAAQ,MAId,qBAAKnH,UAAWF,IAAOG,UAAvB,SACE,wBAAQ8C,KAAK,SAAS/C,UAAWF,IAAOwH,OAAxC,kC,QC5HOC,EAzBU,WAEvB,IAAM7B,EAAYC,YAAYC,IAAcC,YAY5C,OANA2B,qBAAU,WAERC,SAASvH,MAAQ,qBACd,IAIH,iCACE,cAACb,EAAA,EAAD,kCAEA,cAAC,EAAD,IAECqG,GAAa,cAACgC,EAAA,EAAD","file":"static/js/register-page.7d4ca11b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Title_container__3a8vc\",\"title\":\"Title_title__1c_In\",\"appear\":\"Title_appear__1afcg\",\"appearActive\":\"Title_appearActive__3bA1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"HookForm_Wrapper__3NQ6G\",\"HeaderWrapper\":\"HookForm_HeaderWrapper__3Op8q\",\"form\":\"HookForm_form__3jYkg\",\"label\":\"HookForm_label__17J3N\",\"text\":\"HookForm_text__MTP2L\",\"input\":\"HookForm_input__1xzRQ\",\"container\":\"HookForm_container__2eMAU\",\"button\":\"HookForm_button__EQWkO\"};","import PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './Title.module.scss';\n\n// Компонент заголовка для сторінок\nconst Title = ({ children }) => {\n// export default function Title({ children }) {      // або use функціональний підхід\n  \n  const itemRef = createRef(null);\n\n  return (\n    <CSSTransition \n      in={true}\n      appear={true}\n      timeout={250}\n      classNames={styles}\n      nodeRef={itemRef}\n    >\n      <div className={styles.container}>\n        <h1 className={styles.title} ref={itemRef}>\n          {children}\n        </h1>\n      </div>\n    </CSSTransition>\n  );\n};\n\nTitle.defaultProps = {\n  children: [],\n};\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { useState, useCallback } from 'react';          /*** рефакторинг на хуки*/\nimport { useSelector, useDispatch } from 'react-redux'; /*** рефакторинг на хуки*/\n// import { useState } from 'react';       /*** рефакторинг на хуки*/\n// import { connect } from 'react-redux';  /*** рефакторинг на хуки*/\n// import PropTypes from 'prop-types';        /*** рефакторинг на хуки*/\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { authOperations  , authSelectors } from '../../redux/auth';\nimport styles from '../HookForm/HookForm.module.scss';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\n// Компонент форми реєстрації\nconst RegistrationForm = () => {   //const RegistrationForm = ({ onRegister }) => {\n// export default function RegisterForm() {   // або use функціональний підхід\n  \n  const [state, setState] = useState(initialState);\n  const { name, email, password } = state;\n\n\n  \n  const isLoading = useSelector(authSelectors.getLoading); // Селектор статуса загрузки\n\n  const dispatch = useDispatch();\n\n  // Диспатчит операцию регистрации + useCallback\n  const onRegister = useCallback(\n    state => {\n      dispatch(authOperations.register(state));\n    },\n    [dispatch],\n  );\n\n\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onRegister(state); // Визов операції реєстрації і передача даних зі стейта\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setState(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      {/* <label className={styles.label}>\n        <span className={styles.text}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          aria-label=\"Input for your name\"\n          className={styles.input}\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label> */}\n\n        < div className={styles.HeaderWrapper}>\n          {/* <h3>Find contacts by name</h3> */}\n          <TextField\n            label = \"Your name\"       // Фільтрувати:  placeholder=\"Contact name\"\n            onChange={handleChange}  //{() => handleChange({})}\n            value={name}                   //{this.state.name}\n            // className={styles.input}\n            type=\"text\"\n            name=\"name\"\n           \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              disabled={isLoading}\n            required\n          />\n        </div>\n\n      {/* <label className={styles.label}>\n        <span className={styles.text}>Email</span>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          className={styles.input}\n          placeholder=\"Your e-mail\"\n          aria-label=\"Input for your Email\"\n          required\n        />\n      </label> */}\n\n       < div className={styles.HeaderWrapper}>\n          {/* <h3>Find contacts by name</h3> */}\n          <TextField\n            label = \"Email\"       // Фільтрувати:  placeholder=\"Contact name\"\n            onChange={handleChange}  //{() => handleChange({})}\n            value={email}                   //{this.state.name}\n            // className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            aria-label=\"Input for your Email\"\n            \n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              disabled={isLoading}\n            required\n          />\n        </div>\n\n      {/* <label className={styles.label}>\n        <span className={styles.text}>Password</span>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={hanldeChange}\n          className={styles.input}\n          placeholder=\"Should be at least 7 characters\"\n          aria-label=\"Input for your password\"\n          required\n        />\n      </label> */}\n\n      < div className={styles.HeaderWrapper}>\n          {/* <h3>Find contacts by name</h3> */}\n          <TextField\n            label = \"Password\"       // Фільтрувати:  placeholder=\"Contact name\"\n            onChange={handleChange}  //{() => handleChange({})}\n            value={password}                   //{this.state.name}\n            // className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            aria-label=\"Input for your password\"\n            placeholder=\"Should be at least 7 characters\"\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              disabled={isLoading}\n            required\n          />\n        </div>\n\n      <div className={styles.container}>\n        <button type=\"submit\" className={styles.button}>\n          Create account\n        </button>\n      </div>\n\n    </form>\n  );\n};\n\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n\n// export default connect(null, mapDispatchToProps)(RegistrationForm);\nexport default RegistrationForm;\n\n\n// RegistrationForm.propTypes = {\n//   onRegister: PropTypes.func.isRequired,\n// };","import { useEffect } from 'react';                /*** рефакторинг на хуки*/\nimport { useSelector } from 'react-redux';        /*** рефакторинг на хуки*/\n\nimport { authSelectors } from '../../redux/auth'; /*** рефакторинг на хуки*/\n\nimport Title from '../../components/Title';\nimport RegistrationForm from '../../components/RegistrationForm';\nimport Loader from '../../components/Loader';  /*** рефакторинг на хуки*/\n\n// Компонент сторінки реєстрації\nconst RegistrationPage = () => {\n//export default function RegisterPage() {  // або use функціональний підхід \n  const isLoading = useSelector(authSelectors.getLoading); /*** рефакторинг на хуки*/ // Селектор статуса загрузки з контактів\n\n\n  /* \n   *  Схожий на componentDidMount и componentDidUpdate:\n   */\n  useEffect(() => {\n    // Оновлює назву докуммента, використовуючи API браузера\n    document.title = 'Create account .';\n  }  , []  );     // Сетить title строрінки при маунті компонента\n\n\n  return ( \n    <main>\n      <Title>Create your account</Title>\n\n      <RegistrationForm />\n\n      {isLoading && <Loader> L-OOO-G </Loader>}\n    </main>\n  );\n}\n\nexport default RegistrationPage;\n"],"sourceRoot":""}